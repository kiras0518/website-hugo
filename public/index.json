[{"categories":["經驗分享"],"content":"「本篇適合給找想 iOS 工作的初心者 or 想轉換跑道的」 在此分享以前的找工作的經驗，一共投快 80 多封履歷，面了 14 間公司，當然也有大型接案公司邀約去面試，我選擇婉拒沒有去面試。 扣除我要去的公司，在這裡分享 14 間面試過程，面試過程跟結果是因自身的能力背景而異，本篇僅供分享，以下正文開始。 ","date":"2020-08-29","objectID":"/index.en/:0:0","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"2019 - 2020 年 合勤 ZYXEL 可樂旅遊 ASUS 思考軟體 PRO 360 UDN 艾肯娛樂 澄思設計 薩摩亞商OOOO 食我網路 三竹資訊 日商優必達 中時工商財經數位股份有限公司 百威旅遊 和潤企業 ","date":"2020-08-29","objectID":"/index.en/:1:0","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"目標 技術：鎖定原生 iOS 開發，React Native 和 Android 不考慮，然後也是盡量找 Swift 為主的 產業：排除博弈 規模：新創或是大公司都可接受 薪資：年薪 550K 起跳 偏好：希望是做自家產品的公司，再來是接案，如果公司有導 CI/CD 更好，希望有資深的可以帶 ","date":"2020-08-29","objectID":"/index.en/:2:0","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"面試 面試我會分兩個階段，第一階段是投遞不想去的公司，先嘗試一下自己的能力和面試技巧，覺得差不多可行，進入第二階段，投遞想去的公司，不要理職缺上面的應徵條件，有投遞就是有機會，以下正文開始。 ","date":"2020-08-29","objectID":"/index.en/:3:0","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"1. 合勤 ZYXEL- 網通 iOS工程師 面試過程：主管面試，主管好人又加上是動畫宅，展示自己的做品，用到哪些技術說給他聽，問了資料結構序列的問題，年代久遠已忘了 結果：感謝信 ","date":"2020-08-29","objectID":"/index.en/:3:1","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"2. 可樂旅遊 - iOS工程師 面試過程：一開始會要你填寫履歷身家個資，還有寫問卷題目 為什麼要應徵這份工作 ？ 對前一份工作滿意地為何？感到挫折是為何？ 對這份工作的前膽規劃為何？ 敘述自己的專長？ 期望薪水待遇？ 外文如何？ 面試官有兩位，一位負責 iOS 部門，目前團隊為 4 人 預計徵 1 名 會問你有沒有做作品集以及用到哪些技術，講出來給對方聽 工作內容：產品使用 RxSwift，願意給 Junior 機會，肯學就好。 結果：無聲卡 ","date":"2020-08-29","objectID":"/index.en/:3:2","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"3. ASUS 網通部門 - iOS工程師 面試過程：主要維護目前的 Router App 用華碩的路由器可用 App 來做設定，語言是 Oc 目前沒有打算要轉 Swift，說是效能上的問題，iOS 只有 3 個人, 主要是 call 底層 library 的 API 來使用 問你的專案用了什麼架構和技術，GCD部分要如何處理，還寫了 20 題的 Oc 題目 結果：無聲卡 ","date":"2020-08-29","objectID":"/index.en/:3:3","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"4. 思考軟體 - iOS工程師 面試過程：老闆親自面試，被詢問履歷上的活動參賽經驗，和個人未來發展，整體蠻注意個人特質，以及詢問你作品構想來源、用到哪些服務。 主要維護目前的 App，新功能還在規劃中，iOS只有一個人，語言為 Oc，未來有打算改Swift(還在評估狀況，應該是不會改寫)，有可能要維護 Server 用 JAVA，所以兩邊都要學會。 客戶都是竹科科技業大廠，App 走 MDM 管理，企業簽證，主要把企業員工的手機相機功能給封印起來，大致上說明了 MDM 和 APNS 的運作流程 薪水部分保14個月 (依公司營運狀況還會多給獎金)，只說碩士 N 起，薪水還可以詳談，說有沒有興趣加入進來 結果：產品本身很有趣，但是考慮到是 Oc 又要學 Java，所以婉拒。 ","date":"2020-08-29","objectID":"/index.en/:3:4","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"5. PRO 360 - iOS工程師 面試過程：公司有自己的產品 主要是維護和開發新功能 2 個 App 目前都已經上架了，開發主力是 Swift，OC 比較沒有使用到。 iOS 目前只有 1 人，預計在找 1 人。 面試是 PM 和 資深安卓（看起來本身會 iOS ） 問你的專案基於什麼理念想做這麼平台？ 用了什麼架構和技術，第三方套件解決什麼問題 都用白板答題回答 解釋 delegate 是什麼 GCD 運作機制 , sync / async差別 ARC 是什麼 解釋 MVC 架構 如何處理 option? 結果：無聲卡 ","date":"2020-08-29","objectID":"/index.en/:3:5","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"6. UDN - iOS工程師 面試過程：目前有 2 位技術人員，主要是維護 UDN 購物平台 ，每半年都會考核一次，公司很體制 白板考題，基本 iOS 常用考題 解釋 struct vs class 說明 Delegate 是什麼 解釋 UITableView Datasource 和 Delegate 的作用 Autolayout 如何 code設定 會給你圖形解釋如何設置 解釋什麼事 option 和 ! 是做什麼 當使用套件 套件裡面的某一行程式有錯誤 例如 目前是用! 回傳的值是nil 要怎麼處理 Core Data 是什麼 ? 如果不用 Delegate 設計模式 要怎麼做到一樣的功能? 什麼是 Closure？ 有沒有簽過金流服務 ? 結果：無聲卡 ","date":"2020-08-29","objectID":"/index.en/:3:6","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"7. 艾肯娛樂 - iOS工程師 面試過程：面試前，HR 丟一份考題，須先請您完成本次測驗，測驗完成後，會將您的答案提供給單位主管， 若通過會再邀約您至本公司參加面試。 請依去下方的需求做兩個頁面 : 使用者列表頁面 : 列出資料網址中的所有的使用者 列表要顯示縮圖 (avatar_url)、使用者帳號 (login)。 此頁面需要離線也可觀看。 依據使用者帳號過濾列表，且離開 app 可以記錄上次所紀錄的搜尋結果。 點擊列表中某一位使用者進入使用者資訊頁面。 使用者資訊頁面 : 此頁面顯示縮圖 (avatar_url)、使用者帳號 (login)、使用者 id (id) 和 node_id。 結果：自己有挑戰做完沒繳交 code，我婉拒面試 ","date":"2020-08-29","objectID":"/index.en/:3:7","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"8. 澄思設計 - iOS工程師 主管看到我寫的文章，主動邀約我 面試過程：目前算是新創接案公司，跟老闆和主管聊天，主管很年輕又會很多技術喜愛分享，是個 T 型人才，也熱愛自學能力的人，也願意培育新人，公司後期導入完整 CI/CD 的環境，專案採用敏捷開發，在這裏學習到不少事情，面試完後有個小作業。 工作內容：目前 iOS 產品是交友性質使用 Swift 開發。 結果：Offer Get ","date":"2020-08-29","objectID":"/index.en/:3:8","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"9. 薩摩亞商OOOO - iOS工程師 獵人頭邀約面試 面試過程：這跟PTT上某篇iOS心得文是同一間，公司產品是成人影音，新產品是開發交友方面，不過他們沒有 DEMO 給我看。 面試前會先寄一個考題給我，限定五天內要回覆，跟串接 API 有關，因為題目上有寫會 pure code 加分，我有經驗所以 pure code 去開發，差不多等了一週後獲得面試機會，面試我的是三位工程師，一位 PM，我先 Demo 前公司的作品，問了技術架構，你做了哪些功能，當場要講出你的功能構想思路。 有問會不會在意做成人相關產品，說實在蠻想挑戰看看。 結果：無聲卡 ","date":"2020-08-29","objectID":"/index.en/:3:9","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"10. 食我網路 - iOS工程師 面試過程：先是主管先面試，問題刁鑽偏向人格特質，敘述採用了什麼技術解決了什麼問題（蠻注重這塊），履歷上說明你的經歷做個什麼時期擔任，更詳細說明你在這份工作上學習到什麼。 iOS人員面試: 偏向聊天敘述你的個人經歷，你用過哪些工具套件解決問題 說明MVC MVVM 差別應用 說明GCD的應用以上一份專案為例遇到什麼問題克服 偏向哪種設計模式 delegation kvo Closure 和機制敘述 @escaping 是什麼 有寫過測試嗎 如何處理 callback 地獄 如何處理option ? 偏向哪種風格 如何定義資料要不要給他option App Lifecycle 應用或採坑分享 是否有做過不同 navigation 切換到不同應用頁面router? 是否用JWT oauth ResultaAPI? 目前團隊：目前專案部署 CI/CD 和測試這塊薄弱，前後端，iOS 和安卓都是各一名，預計徵一名 結果：無聲卡 ","date":"2020-08-29","objectID":"/index.en/:3:10","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"11. 三竹資訊 - iOS 研發工程師 面試過程：先填寫個人公司履歷，再來手寫 Swift 題目，偏向語法熟悉度，題目很簡單，寫完後大約 30 分鐘，經理來面試，敘述自己過去學習經歷、挫折、工作上學習到什麼，自己優缺點，比較偏向聊天性質。 說明 MVC MVVM 優缺點架構 有無寫過測試 希望能找 oc 和 Swift ，因為想改以前的 SDK 是個大工程 RD 團隊目前 12 人 工作內容目前偏維護銀行內容居多 結果：感謝函 ","date":"2020-08-29","objectID":"/index.en/:3:11","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"12. 日商優必達 - iOS工程師 面試過程：一到公司報到，HR 很親切接待，一小時手寫考題，考反轉字串和動態規劃，題目是 c 但是可以寫 Swift 重點是邏輯，寫完要講給 RD 他們聽，剩下聊公司發展和產品面向，部門主管閒聊了很多人生方向，還跟我聊起他自己的經驗，總之主管和RD人員都很好聊 😆 所以流程是寫考題 -\u003e RD 人員面談 -\u003e 技術主管面談 -\u003e HR 面談，面試完大約 3 個小時左右 主要做雲端遊戲影音串接很多遊戲商採用他們家技術，日本、中國、韓國都是客戶 公司開發主要想找會 C 和 Oc，我聽下來是寫 C 居多 Oc 為輔助，Oc 轉 Swift 目前未來規劃是有打算要改寫，但是還很長遠，目前產品沒有導入 CI / CD。 結果：感謝信 ","date":"2020-08-29","objectID":"/index.en/:3:12","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"13. 工商財經數位 - iOS工程師 面試過程：到公司報到，一進來中時大樓真的好大，菜雞沒進過傳統大公司😂 主管拿出考題，大概寫 40 分鐘，題目內容有出現 Oc 語法、排序法、和軟體架構，寫完之後跟主管聊天和談論專案架構，說是待在這第二年，之前待在外商，RD 部門平均年齡都是 34 起跳，主管偏向要找年輕人來活化團隊，目前想導入 CI/CD 這塊。 公司產品：目前偏向維護性質居多，聽起來有很多時間可以自己去研究技術 結果：感謝函 ","date":"2020-08-29","objectID":"/index.en/:3:13","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"14. 百威旅遊 - iOS工程師 面試過程：先是填寫履歷，再來是資訊部門經理和 SA 來面談，問你履歷上面的開發經驗，Demo 自己作品，介紹公司環境，以及工作內容，偏向要找 Android 和 iOS 都會的人，或者是進來後能同時學習 Android，我不是應徵 iOS 嗎？😱，目前想要開發的內容為內部自家系統使用。 結果：無聲卡 ","date":"2020-08-29","objectID":"/index.en/:3:14","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"15. 和潤企業 - iOS工程師 面試過程： 主管先簡單自我介紹以及公司介紹要做什麼服務，上班目前一律是8:30打卡，沒有彈性，未來RD部門會有彈性。 再來是兩位 RD 當場出上機考題，會給你公司用的 API ，會用到 Restful API, UI Auto layout 之類的基本功，做了 40 分鐘還沒做完，後來被問要多久能做完，我說可能還要半小時，當場就給 RD 看我寫的 code，就結束上機考 上機考完，再來是經理面試，說是要擴編養團隊，以前沒有RD部門，都是外包服務商，打算自己接。 問你履歷上面經歷，在學期間做了什麼印象深刻事情，以及加入團隊有什麼想法，使用的共享機車 App 有什麼缺點能改進 結果：Offer Get ","date":"2020-08-29","objectID":"/index.en/:3:15","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"16. Pchone 商店街 - iOS工程師 面試過程：收到 Email 邀約來信，本公司 iOS 及 Android APP開發皆使用 React Native 為主 修蛋幾勒🤚，職缺明明寫要用 Native 原生 Swift 開發，後來打電話去確認說本公司產品都是用 React，未來沒有打算用原生。 結果：無 ","date":"2020-08-29","objectID":"/index.en/:3:16","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":["經驗分享"],"content":"後語 最後去了一間大公司，有滿足我興趣的產品，自己也算是很幸運了，不得不說自己能力並不是很強，找工作能錄取，真的也是有運氣成份存在 😂 當初我是菜鳥白紙找八個月沒人要，自學後上架作品，第一份工作大約找了一個月多，後來個人因素離開公司後重新進修３個月，第二份也是差不多找了一個月多拿到 Offer，確實有經驗會比較快拿到，所以短時間能找到工作算是很幸運，但是進去可能會是一個坑又是另一回故事了😆 薪資方面，我覺得大公司很看重你相關學位和學歷這塊，技術倒是其次，人資部門審核薪資，薪水依照你學歷方式，反而新創小公司，看重你能力，學歷沒啥重要，薪水能彈性談，以上是我自身經驗，給大家參考看看。 綜合自己這次經驗，市場普遍不太接受沒相關工作經驗的人，當然也是有公司願意培育新人，找尋工作 3 ~ 6 個月算是正常，真的要有耐心花時間等待跟尋找，若有講不清楚的地方，歡迎留言或私訊，我在盡量回答。 ","date":"2020-08-29","objectID":"/index.en/:4:0","tags":["經驗","面試"],"title":"iOS 菜雞面試經驗分享 - 停更","uri":"/index.en/"},{"categories":null,"content":"Ting君Badge \" Ting君 struct TingKun: iOSDeveloper { let name = \"Ting\" let comeFrom = 🇹🇼 let seniority = 1 let education = [\"Computer science, 2010-2015, Chung Hua University\", \"Master Program in Toy and Game Design , 2016-2018, National Taipei University of Education\"] let interest = [\"FujiFilm Camera\", \"Dessert\", \"Travel\", \"Car\", \"MartialArts\"] let description = \"\"\" Hi, Do you want build a Apple  \"\"\" } 工作環境： macOS iOS iPadOS 裝備： MacBook Pro 15’ 2019 iPhone 7 iPad Pro 2020 Sony RX100 M5A ","date":"2020-08-02","objectID":"/about/:0:0","tags":null,"title":"關於我","uri":"/about/"},{"categories":["iOS開發"],"content":"從 iOS 13 和 Xcode 11 ，引入了一個新的概念，叫做 Scene，Scene 是可以在 iPadOS 上同時打開多個窗口，也就是可以同時打開切割畫面","date":"2020-07-01","objectID":"/index.en/","tags":["Xcode","Swift"],"title":"如何在 Xcode 11 中不使用 Storyboard 和低於 iOS 13 進行開發?","uri":"/index.en/"},{"categories":["iOS開發"],"content":"從 iOS 13 和 Xcode 11 ，引入了一個新的概念，叫做 Scene，Scene 是可以在 iPadOS 上同時打開多個窗口，也就是可以同時打開切割畫面。 官方文件來源：Apple Developer Documentation ","date":"2020-07-01","objectID":"/index.en/:0:0","tags":["Xcode","Swift"],"title":"如何在 Xcode 11 中不使用 Storyboard 和低於 iOS 13 進行開發?","uri":"/index.en/"},{"categories":["iOS開發"],"content":"如何在 SceneDelegate 中不使用 Storyboard 創建一個 window，以及如何處理 iOS 12 及以下版本的問題？ 先開啟 Xcode 11 ，當你創建一個新項目時， user interface 選擇 Storyboard 才能運行 iOS 13 以下的版本，也會發現 SceneDelegate 自動生成。 這個檔案管理著許多場景中的一個場景的生命週期。 另一方面，AppDelegate 還為 Scene 增加了一個方法。 這是整個應用程序相關的 func ，例如添加和刪除場景。 總而言之，AppDelegate 管理應用級的生命週期，SceneDelegate 管理場景級的生命週期。 ","date":"2020-07-01","objectID":"/index.en/:1:0","tags":["Xcode","Swift"],"title":"如何在 Xcode 11 中不使用 Storyboard 和低於 iOS 13 進行開發?","uri":"/index.en/"},{"categories":["iOS開發"],"content":"SceneDelegate without Storyboard 不使用 Storyboard 情況下，大部分都會去刪除 Main.storyboard，用 viewController 或 xib 進行開發，但引入 SceneDelegate 後，生成的方法基本相同，只是略有不同。 Targets Main Interface General清空界面 從 Info.plist 中更改 Application Scene Manifest 的值。 Application Scene Manifest \u003e Scene Configuration \u003e Application Session Role \u003e Item 0 (Default Configuration) Enable Multiple 設置成 YES, iPadOS上能夠並行多個畫面 來到 window 的 rootViewController。 ​ 在 SceneDelegate.swift 中的 scene(_:willConnectTo:options:) 方法中，指定以下内容 ​ ​ 現在可以在不使用 Storyboard 的情況下生成一個 window 👏👏👏 ","date":"2020-07-01","objectID":"/index.en/:2:0","tags":["Xcode","Swift"],"title":"如何在 Xcode 11 中不使用 Storyboard 和低於 iOS 13 進行開發?","uri":"/index.en/"},{"categories":["iOS開發"],"content":"如何運行 iOS 12 及以下版本？ 如果你使用的是 iOS 12 或更低的版本，會發現無法正常運行。 首先，讓我們先設置使用 available 和 SceneDelegate 相關的 code。 在 AppDelegate 中宣告 window、並在application(_: didFinishLaunchingWithOptions:)中設置 window，這樣的話就適用於 iOS 13 和小於其他版本 。 有了以上 code，iOS 12 及以下的系統就可以順利運行了👏 ","date":"2020-07-01","objectID":"/index.en/:3:0","tags":["Xcode","Swift"],"title":"如何在 Xcode 11 中不使用 Storyboard 和低於 iOS 13 進行開發?","uri":"/index.en/"},{"categories":["iOS開發"],"content":"參考資料 Scene Delegate In Xcode 11 \u0026 iOS 13 - LearnAppMakingWritten by Reinder de Vries on October 13 2019 in App Development What does the new SceneDelegate class in your iOS 13…learnappmaking.com Understanding the iOS 13 Scene Delegate - Donny WalsBy the end of this week’s blog post you will know: What the scene delegate is used for. How you can effectively…www.donnywals.com ","date":"2020-07-01","objectID":"/index.en/:4:0","tags":["Xcode","Swift"],"title":"如何在 Xcode 11 中不使用 Storyboard 和低於 iOS 13 進行開發?","uri":"/index.en/"},{"categories":["經驗分享"],"content":"忙碌了一段時間，一直在想間隔有點久的文章到底該來寫些什麼？那就來寫個歷程吧！","date":"2020-06-16","objectID":"/index.en/","tags":["經驗"],"title":"關於我轉職變成 iOS 開發者這檔事：終","uri":"/index.en/"},{"categories":["經驗分享"],"content":"忙碌了一段時間，一直在想間隔有點久的文章到底該來寫些什麼？那就來寫個歷程吧！ 首先，我的求職過程為期 8 個月，不確定這樣算不算是待業很久，26歲碩班畢業，沒有正式工作經驗覺得很可怕，9–12月份，這 3 個月來各處求職投履不同職缺，3 個月 iOS 課程，1個月面試求職，而且我是沒有正職的工作經驗，雖然有經過短短的實習經歷。但是這現實社會中往往只是個看不太上的經歷吧，在這段期間裡，蠻多不順遂畢竟當時面試完都是沒有消息覺得能力不足，所以寫的東西也比較有限。 這篇文章為學生時期畢業後的經歷，可能會和一般的轉職文略有差別，相對的，會在轉職上課過程和進入公司生活的部分來說明，我覺得這部分非常重要。 背景與自介 還是先自介一下，大學畢業於資工系(升大二從通訊轉到資工)，沒具備基礎的程式能力，基本的程式概念是略懂，如變數、迴圈、物件導向，大概可以講得出來一些東西，大學生活實際就是上網找資料拚拚貼貼指定的作業能過就好，完全不懂這邏輯為什麼要這麼寫，連二維矩陣怎麼寫都不知道，再來是重要的演算法、編譯器，完全不會就這樣畢業了。就這樣有點厭倦資工的生活(大學念五年)，所以決定去嘗試唸不同科系的研究所想找尋一點人生的方向，意外的研究所也應徵上了，念的是玩具與遊戲設計所，研究所又是另一個故事，這邊我就不會多講，不過這年頭科技業是蠻多人也想洗個四大學歷之類的。 心態調整很重要 求職過程中一定會因各種原因感到焦慮，投遞履歷沒下文、面試很多公司卻都拿不到offer、公司面試意願詢問後卻再也沒下文…等，再加上家人的壓力，存款已見底，我這段時光會非常的痛苦，因此自我心態調整就很重要。 透過面試過程找出一些缺失紀錄起來，除非你有想進去的公司就要想辦法準備好，我會將面試作為訓練自己的機會，還有考官當下考題我會紀錄起來，於回去後去思考搞次好下次面試又有同樣類型的考題，自己在談吐、表達、回答想法…等方面要怎樣修正才會更好。 找想做的事情，千萬不要在家執行，因為怠惰力很高，除了每日看看職缺與投遞履歷之外，可以規劃精進自己能力的計畫，每日小專案練習、線上課程、看相關書籍…也好。 與同領域的朋友討論溝通現況，強者朋友有作品集可以展示，前後端和 Server 方面實力都不錯但也是待業半年左右才找到工作，可能是他給自己薪水期待標準比較高吧，不過他也跟我說面試到的公司，都不太想採用沒有正職工作經驗的人。 8月底新創實習結束後，開始投遞履歷找尋工作花了 4 個月，面試的有工程助理、IT 、SI、iOS，網管，FAE，反正跟資訊有關的我全都投遞 60 幾家，大約面試快10家不同產業的工作，最後都是無聲卡或是感謝信，自己被洗臉到懷疑人生，看來很多公司不想要白紙一張，加上自己沒有專業技能，發覺到業界不想選擇沒有經驗的新鮮人，在求職這段期間也有線上課程自學，增加自己的能力，但是發覺根本無法達到我要的效果，開始自覺這項下去沒辦法，待業時期加上學生時期的存款快燒光了，最後做出了決定去轉職上課。 關於我轉職變成 iOS 開發者這檔事不要還沒有去嘗試，就疑惑自己是否能完成。medium.com 在這邊上課，讓我在程式的「自學階段」，對於該怎麼做比較好、比較有效率問問題，是相對有想法和具體做法的，一般人如果直接自學想轉職成功，難度可謂非常的高，要有很強的領悟力，簡單講就是自身天賦技能很高。 來到 iOS 孤島生活 1 月份正式加入了 iOS 小世界實體課程，在這裡我會說明小世界的上課風格 整體來說這裡 R 只收 4 個學生，會先跟你對面談過才會看要不要收你，就是一個很有個性的人，這裏不像外面老師一樣手把手帶者你一步一步來做，全都是依據他安排的課綱來自己來按表學習，讓你學會獨立自學找答案的能力，簡單的說明就是把你丟在孤島上你只能用手邊的工具活下去，然後求生過程中你要自立或跟夥伴討論怎麼活下去，真的快沒命的時候，可以呼叫管理員出來詢問問題，前提你要心理準備被 R 臭罵一頓 😨，當時我就是被罵最慘的那個，懷疑到我沒有寫 code 的天份，對抽象資料流向的概念很差，當下你會承受非常大的壓力，就看你自己能不能撐下去，總之 R 的教學風格就是”罵”看你能不能自己接受，當然 R 也會看出妳的問題點在哪裡給予你適度的建議，但是要不要做就看你自己。 我舉個例子，當初問題卡住不知道怎麼辦，被罵浪費時間、馬的為什麼你不開口去問你身邊的學長、你為什麼不準時回報今天的進度的、為什麼不敢講出來、你給我自己好好反省 😨 (8 ji3ru.4q841o4a84 為期 3 個月的時間，今年 4 月初結束課程後，自己也上架了 App 作品，開啟求職為期 3 個星期，開始投遞履歷，也有收到許多公司的面試邀請，在104上面總共投了約 50 家，收到 6 個面試邀請，面了 6 家，最後拿到 2 個 offer，選擇了交通比較方便的接案公司，於是 5月份正式上班，新竹產業都是以 IoT 、藍芽和寫 OC 為主，基本上我是不考慮進入這些公司，因為我是寫 Swift 😂。 投遞履歷的技巧，以 Junior 來說不太需要管職缺開出來的要求條件，很多人以為上面要求的條件才可以丟履歷，其實有興趣的就會邀你面試，你不丟就是沒有機會，有丟就是有機會，投履歷的第一階段就是丟你不想進去的公司有面試的機會就是面個經驗，有第一段的經驗後，第二階段就是丟你真正想去的公司為主，因為前面的經驗讓你已經準備好要怎麼面對了。 聽 R 師父講台灣很多專案公司能不去就不要去，要以有自家有產品的公司為優先做選擇。 乍看這些面試數字也沒什麼的過人之處，確實還很低。畢竟以 iOS 市場需求都想要找有經驗的，所以面完後加上時間經濟上的壓力，就直接決定去邀請我面試的那家接案公司，以我得到 offer 的來說，待遇以無經驗轉職的新人而言，我覺得已經很滿足，加上目前在這間公司環境和專案的學習我個人覺得蠻滿意。 畢竟 3 個月學習到的東西有限，就算基礎打得很紮實，讓你通往的戰場路程會比較好上路，不過話說回來，我自認我的的求職過程和上課並不順利，既曲折又費時，所幸最後堅持了下來。這些錯誤與痛苦才是比較值得一提、能對讀者有幫助的，工作後才發覺的自己能力又更不足處理公司的專案。 來到新創公司開始正式工作 目前現有專案 iOS 上只有我一人開發，Leader 為輔助角色，一進到公司開始接觸專案，當初這案子算是完成度 50%，底層架構都有基礎，這裡要求的全用 code 去打造，畫面完全沒有 StoryBoard ，xib 來輔助使用，你要自行想像 UI 畫面 Build 完的話面，layout 有沒有依照設計稿要求達到目標，所以也算是打掉重練一些觀念，前面 3 個月都是在刻 UI 部分居多，再來串接資料是依照 API 規範來用 Promise 處理 callBack 串接資料丟在畫面上，畢竟有寫好的範例可以依樣畫葫蘆去處理，記住要搞懂每一行到底在做什麼事情，千萬不要複製貼上改個參數能取得資料就好，才不會不清楚整個怎麼處理 API 流程。 新手時期在 Controller 常常塞一堆邏輯，當出現特定需求變更時，直接變更原本程式碼。除了可能改壞原本程式功能外，也會增加維護上的麻煩，加上以前沒有重構實作一個 Services 層 Singleton 的概念，導致 code 越寫越不靈活，接觸到專案架構發現，理解到架構模組化彈性的好處，code 寫起來也比較漂亮。 再來工作上遇到的問題，以我目前狀況對資料整個運作流程常常還是想不出來要怎麼處理？這包起來 Services 底下 func 是在處理什麼、要怎麼套用到其他地方，流程該怎麼規劃，表面上不一樣底下都是做ㄧ樣得事情？ 以目前能力的不足，導致開發上進度常常很落後，下班後回家還是繼續處理做不完的事情，可以感受到時程的壓力，常常要衝刺，也感謝 Leader 跟我對談狀況以及提出建議要去怎麼去更進步成長。 對有興趣的範例，就一個一個字跟著敲出來，要去理解每一行在做什麼事情，把它講出來、講給自己聽講到能理解為止；範例看完後，全部關掉不要參考，自己全部重新再寫出來，如果你做得出來就表示你已經掌握著了！ 每個開發者都是這樣走過來的，只是我在錯誤方向留下紀錄再去做修正，畢竟沒有專業是可以速成的，假日要花更多的時間來學習技能上面的不足。 總結在這短短不到一年的職涯上 以我觀察到工程師職場上３個重要的東西為 ","date":"2020-06-16","objectID":"/index.en/:0:0","tags":["經驗"],"title":"關於我轉職變成 iOS 開發者這檔事：終","uri":"/index.en/"},{"categories":["經驗分享"],"content":"實力 在工程師的世界，實力就是一切，技術能力就是工程師的根本，如果沒有持續進步，那就是退步，每年 WWDC 有很多新技術都學不完，再加上工作你不得不把 bug 解掉和開發增加一堆新功能要去處理一堆技術債。 ","date":"2020-06-16","objectID":"/index.en/:1:0","tags":["經驗"],"title":"關於我轉職變成 iOS 開發者這檔事：終","uri":"/index.en/"},{"categories":["經驗分享"],"content":"溝通 不只要學會講，也要學會聽，若是講得不清楚，自己是否要理解到你要表達什麼？我很常敘述問題的表示讓 Leader 無法瞬間理解，講到對方理解我問題點在哪裡蠻花時間的。 ","date":"2020-06-16","objectID":"/index.en/:2:0","tags":["經驗"],"title":"關於我轉職變成 iOS 開發者這檔事：終","uri":"/index.en/"},{"categories":["經驗分享"],"content":"自信 這是一種心理層面的東西，只能想辦法自己去克服，可以找個心靈雞湯或書籍來看看去實踐，或者找個高手電一電可能會激勵自己當然你也可能會更挫折很想逃避。 做到現在自身還在懷疑我在這領域沒有天分以及能不能成為獨當一面的開發者為挑戰。 故事說完了，我知道我的文筆寫出來還是很差，感謝你看完這篇文章，就當做是一個菜鳥的心得文吧！ ","date":"2020-06-16","objectID":"/index.en/:3:0","tags":["經驗"],"title":"關於我轉職變成 iOS 開發者這檔事：終","uri":"/index.en/"},{"categories":["經驗分享"],"content":"不要還沒有去嘗試，就疑惑自己是否能完成，R 常常跟我們說，既然要想成為工程師，就要勇於挑戰自己能力的極限以及習得解決問題的能力","date":"2020-04-16","objectID":"/index.en/","tags":["經驗","轉職"],"title":"關於我轉職變成 iOS 開發者這檔事","uri":"/index.en/"},{"categories":["經驗分享"],"content":"前言 不要還沒有去嘗試，就疑惑自己是否能完成，R 常常跟我們說，既然要想成為工程師，就要勇於挑戰自己能力的極限以及習得解決問題的能力。 新創公司實習結束後，開始找尋資訊業類型工作，當初的目標是朝向 IT 產業發展，期間也面試過很多家做 SI 、雲端、DevOps 系統維運等類型的工作，但發覺到業界不想選擇沒有經驗的新鮮人， 求職這段時期真的很煎熬，心想再這樣下去不是辦法，因為目前的我沒有作品可以展現。經過深思熟慮後，我決定踏上 iOS 開發者之路，並參與 iOS 實體課程以加快學習過程。 課程學習初期 來到這裏，完全不會有人教你如何寫 Swift ，完全都要靠自己去尋求解答。課程從基礎語法開始，要花一個禮拜的時間看完 TreeHouse 精選的 8 個影片，影片內容全是英文，對於英文苦手的我來說，感覺就像是原本的普通難度被調高到困難模式，好在現在的輔助工具很多，靠著翻譯工具可以稍微降低語言的障礙，但是當遇到專業術語時就無法使用翻譯工具來解答，這時就只能問 Google 大神的幫忙和閱讀網路上專業文章來解決。 課程下個階段，開發出一個電商類型的 App 經過前面 Swift 基礎語法學習完畢後，接下來要踏入 iOS 的領域。 要處理的問題就是使用 Core Data ，要利用 Core Data 記錄使用者點擊 Like 的狀態，在 Product 頁面點擊 Like 時， Favorite頁面去刷新資料呈現 Like 的產品，要能夠明確記錄是哪一項產品的元素儲存在 Core Data 中，以點擊 Like 後紀錄產品的 ID 爲主，因為產品 ID 基本上是固定的，就像是你的身分證一樣沒事不會去更動，因此不管後端人員去更動產品資料時，都不會影響到 Like 紀錄，同時也讓我了解到資料庫的設計到怎麼使用 Core Data 的資料存取。 在這個專案中我學會 Auto Layout 設定、GCD、 Delegate、Core Data、JSON 解析、API 串接、使用 Facebook Token 跟 Server 交換 JSON Web Token 去驗證使用者取得資料，到後面的 Debug 技巧，當找不到問題點就是 print 出來觀察資料，在開發過程中壓力真的很大，需要花很多時間去解決問題。 為了解決問題，需要一直嘗試變換關鍵字查詢資料，但最忌諱的就是寫到鬼打牆(思考邏輯不通)，自己解決鬼打牆的方式就是先不要思考問題，看個廢片好好放鬆一下，再回來看問題點，設置鬧鐘限制一小時解決眼前的問題，真的無法解決問題就是快點請教前輩，不要浪費時間，每解決一個問題，就是讓自己 Level 提身才有成長的空間。 最終階段，開發自己專案的 App 經過之前的開發訓練經驗，算是存活下來了。 有基礎知識接下來「從無到有」規劃出想做的 App 與 R 討論 由於自己並不是 UI 設計師，故用手繪方式將初版的設計稿畫出來。 當設計稿畫完，程式的邏輯判斷和資料處理該怎麼規劃就是頭痛的部分， 因為資料的流向你要很清楚從哪裡出來、從哪裡結束以及你要它做什麼事情。常常腦中想出來要的結果，用程式碼去控制發現根本不是我要的結果。遇到的問題錯誤和需要的功能都會先寫在筆記本，重新思考該如何怎麼執行以及架構上的規劃。 以前沒有手寫記錄的習慣，也漸漸培養起紀錄問題和規劃資料 第一版作品完成，第二版會加入視訊通話功能 Find Mend 的構想 這個作品最開始發想源自於，現代人可能忽視心理健康問題，但是實際面對心理問題都不知道該從哪裡去尋求協助，線上心理諮商師可能就是解決問題的方式。 以上構想，開發出這個平台來實現自己的想法，從程式撰寫、資料庫設計、 API 串接、運用第三方套件、 UI 設計皆由自己獨立完成。 Firebase 的運用 即時聊天使用 Firebase Realtime Database 資料庫來儲存聊天紀錄和即時同步資料，從資料結構的設計，與登入串接都在 Firebase 上完成。 包含 Authentication 管理註冊的使用者帳號、登入介面、忘記密碼、Storage 儲存上傳的照片與頭像、Analytics 使用者操作分析紀錄、Crashlytics 當機回報訊息，讓我可以即時了解目前 App 的各種狀況。 Apple Map 的運用 使用台北政府開放資料平台 API 資料透過 JSONSerialization 解析，地圖列表透過 Apple Mapkit 將 解析完 API 資料轉換成座標顯示在 Map 上面。 專案進度管理 在開發自己的專案中採取流行的 Scrum 的方式，每天要回報的事情為遇到的問題，昨天做的事情、**今天要做的事，**確保專案執行的進度，同時將專案拆解成一塊一塊小功能，評估自己對於一項技術的實現需要花費的時間並畫押時程。 開發順序的思維並非條列式，而是個別完成核心功能，確保每個畫面功能分別都能運作後再組合起來。當開發上遇到困難時，先完成其他項目，順便讓自己跳脫原本被侷限的問題點，之後再回來解決途中的問題，這樣才更有效的解決問題。 若前期將時間都花在處理問題上，最後剩下少量時間來完成後半的項目，只會讓自己的壓力更大，造成進度耽擱，因為時間是不等人的！ 對不熟習的技術請優先於去安排研究，畢竟是你沒碰過的東西需要大量花去時間去研究。 利用 Trello 的分類，將任務切成三大事項，這樣的模式方便自己每天追蹤自己的專案完成度，也可以很容易地完成各項功能。 最終磨煉後結語 其實曾經我也嘗試透過線上課程在家裡自學，但發現效益非常的低，所以才想透過實體課程來增強自己的能力，透過 R 來協助我理解程式的概念。 我在學習階段犯了很多錯誤，舉個例子，在學生時代沒有時間成本的概念，導致在開發上進度嚴重落後，經過訓練後覺得番茄時鐘法適合我來改善這問題。 問問題也是一種磨練，從一開始不知道怎麼問問題到敘述目前的問題都是一個歷程，先仔細觀察錯誤訊息，還是不知道錯誤在哪，再把錯誤訊息拿去 Google 之後還是不知道怎麼解決(超過限制的時間)，已經努力嘗試著想要去解決問題，用盡各種方式還是沒辦法解決問題，這時候就請教你的導師或同事說明你遇到的問題點來尋找方向吧！ 希望在學習程式開發的朋友不要害怕這些看似困難、讓自己止步的問題，正是因為這些阻礙才能讓自己成長，認識自己的不足之處，學習程式的挫折感非常的大，程式這條路上是滿滿的坑。 當你遇到的問題不斷犯錯，就表示你自己本身沒有警覺到這問題的嚴重性，當有前輩給予你建議，請接受他的建議去解決這個問題點也同時摸索自己解決問題的能力。 以上是我分享的歷程，希望對有意願想轉職的你，能有一些幫助。 ","date":"2020-04-16","objectID":"/index.en/:0:0","tags":["經驗","轉職"],"title":"關於我轉職變成 iOS 開發者這檔事","uri":"/index.en/"}]